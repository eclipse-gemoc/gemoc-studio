grammar org.eclipse.gemoc.Dsl hidden() 

generate dsl "http://www.eclipse.org/gemoc/Dsl" 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Dsl :
	{Dsl}
	('\r'? '\n') *
	(
		(  => EMPTY_LINE | 
			SL_COMMENT 
		) ('\r'? '\n')*
	)*
	'name' WS* SEPARATOR WS* name=(ENTRYKEY | STRING) ('\r'? '\n')*
	
	(
		
		(
			entries+=Entry |
			=> EMPTY_LINE | 
			SL_COMMENT 
		) ('\r'? '\n')*
	)*
;

Entry:
	WS* key=ENTRYKEY WS* SEPARATOR WS* value=EntryValue
;

EntryValue:
	{EntryValue}
	entryLines+=ENTRYVALUE_LINE 
	(
		WS*
		(
			(=> (',' WS* '\\' LINE_START) entryLines+=ENTRYVALUE_LINE) |
			//(=> ('\\' LINE_START) entryLines+=ENTRYVALUE_LINE) |
			(',' WS* entryLines+=ENTRYVALUE_LINE)
		) 
	)* 
;
ENTRYVALUE_LINE:
	(
		(SPECIAL_CHAR)+ (
			(WS+ (SPECIAL_CHAR)+) |
			WS*
		)
	)? 
	(ENTRYKEY | STRING)
	( 
		(WS|SPECIAL_CHAR)*
		(ENTRYKEY | STRING)
	)*
   ( 
		WS* (SPECIAL_CHAR)+ ( WS+ (SPECIAL_CHAR)+)*
	) ?
;

EMPTY_LINE:
	LINE_START 
;


// --- lexer tokens ---
// the order is important

terminal ENTRYKEY:
	('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')*
;

//terminal END: EOF;

terminal STRING: 
   // '"' ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"';
    '"' ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\'|'\r'|'\n') | !('\\'|'"'|'\r'|'\n') )* '"';
    
terminal LINE_START:
	'\r'? '\n' WS*
;    

terminal SEPARATOR:
	'=' 
;



/*
 * Line starting with '!' or '#'
 */
terminal SL_COMMENT :
	('!' | '#') !('\n'|'\r')* 
;


terminal WS:
	' '|'\t'
;

/*
 * Special characters used in values
 */
terminal SPECIAL_CHAR:
	('#'..'+')|('-'..'/') | (':'..'<')| ('>'..'@') | ('['..'^') | ('{'..'~')
;


terminal ANY_OTHER:
    .;

