grammar org.eclipse.gemoc.Dsl hidden(SL_COMMENT) 

//generate dsl "http://www.eclipse.org/gemoc/Dsl" 
import "http://www.eclipse.org/gemoc/Dsl" as dsl

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Dsl returns dsl::Dsl:
	{dsl::Dsl}
	((SPACE+ '\r'? '\n') |('\r'? '\n'))*
	(SL_COMMENT ('\r'? '\n')+)*
	SPACE* entries+=Entry (('\r'? '\n')+ (SPACE+ '\r'? '\n')* SPACE* entries+=Entry)* 
	('\r'? '\n' ((SPACE+ '\r'? '\n') |('\r'? '\n'))*)?
	
;

Entry returns dsl::Entry:
	{dsl::Entry}
	key=WORD SPACE* (=> SEPARATOR SPACE* value=MULTILINE) 
;

/*
 * A WORD that may contain ':' and '='
 */
VALUE_WORD:
	(LETTER|SEPARATOR)+ (SPACE (SPACE | (LETTER|SEPARATOR) )* (LETTER|SEPARATOR))?
;

/*
 * VALUE_WORD splited on severals lines.
 * Starting spaces are ignored for each new lines (see DslValueConverter)
 */
MULTILINE:
	VALUE_WORD  (SPACE* '\\' '\r'? '\n' SPACE* VALUE_WORD)*	
;

/*
 * Start and finish with a letter. Can contain spaces.  
 */
WORD:
	LETTER+ (SPACE (SPACE | LETTER )* LETTER)?
;

/*
 * Line starting with '!' or '#'
 */
terminal SL_COMMENT :
	('!' | '#') !('\n'|'\r')* ('\r'? '\n')?
;



/*
 * Everything that is not ':', '=', space or ending line.
 * Escaped separators are LETTER
 */
terminal LETTER:
	!( SEPARATOR | SPACE | '\\\n' | '\r' | '\n' ) //| '\\=' | '\\:' | '\\#' | '\\!' 
;

terminal SEPARATOR:
	'=' | ':'
;


terminal SPACE:
	' '|'\t'
;

