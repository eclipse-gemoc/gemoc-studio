/*
 * generated by Xtext 2.14.0
 */
package fr.inria.diverse.logo.xtext.formatting2

import com.google.inject.Inject
import fr.inria.diverse.logo.Logo
import fr.inria.diverse.logo.statement.Right
import fr.inria.diverse.logo.xtext.services.LogoGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class LogoFormatter extends AbstractFormatter2 {
	
	@Inject extension LogoGrammarAccess

	def dispatch void format(Logo logo, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (statement : logo.statements) {
			statement.format
		}
	}

	def dispatch void format(Right right, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		right.angle.format
	}
	
	// TODO: implement for Left, Forward, ProcedureDefinition, ProcedureCall, Block, If, While, Repeat, Equals, Greater, Lower, Plus, Minus, Mult, Div, And, Or, Not, Opposite
}
