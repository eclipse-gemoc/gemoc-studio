////////////////////////////////////////////////////////////////
//	Reproduce title only if not included in master documentation
////////////////////////////////////////////////////////////////
ifndef::includedInMaster[]

= Developer Guide
== Contributing

endif::[]


=== Compilation of the complete GEMOC Studio

==== Introduction

The source code of the [GEMOC Studio](http://gemoc.org/studio/) is currently spread among different git repositories in Eclipse organization.

This project relies on the presence of the correct git repositories (cloned with the correct name) to locally build a working studio.


==== Usage

First checkout the git repositories :

[source,bourne]
----
git clone  https://github.com/eclipse/gemoc-studio
git clone  https://github.com/eclipse/gemoc-studio-modeldebugging
----

Note: the repositories must keep their names (Ie. do not change the destination folder name) as the maven pom file expects to find them at specific locations.

Then compile using maven:

[source,bourne]
----
cd gemoc-studio/dev_support/full_compilation
mvn package -Dmaven.repo.local=$PWD/localm2 
----

We use one options:

- `-Dmaven.repo.local=$PWD/localm2`: use a folder called *localm2* to cache all the external dependencies of the studio, instead of using the user local maven repository. Since the GEMOC Studio a full eclipse package and has around 1GB of dependencies, this avoids using this much space in a hidden folder of the user home dir.


If you prefer to use your own local maven repository (ie. in _<HOME>/.m2/repository_), remove the use of `-Dmaven.repo.local`, ie. use this command:

[source,bourne]
----
mvn package 
----

If you already compiled and resolved all dependencies at least once (ie. if you filled your local maven repository with everything needed for the build), add the option `-o` to perform an offline only build, which is significantly faster since it skips checking all maven repositories online. 

In the end, the result can be found in `gemoc_studio/gemoc_studio/releng/org.eclipse.gemoc.gemoc_studio.product/target/products/`, with one studio zip per platform.


The build also assemble complementary results:
 
- an update site, available in `gemoc_studio/gemoc_studio/releng/org.eclipse.gemoc.gemoc_studio.product/target/repository/`
- an archivable version of the web help; available in `gemoc-studio/docs/org.eclipse.gemoc.studio.doc/target/publish/webhelp/`
